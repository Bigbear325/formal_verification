File "zfree_4_2.pv", line 806, character 12 - line 806, character 28:
Warning: identifier ZeroRating_Data1 rebound
File "zfree_4_2.pv", line 806, character 41 - line 806, character 57:
Warning: identifier ZeroRating_Data2 rebound
File "zfree_4_2.pv", line 806, character 70 - line 806, character 86:
Warning: identifier ZeroRating_Data3 rebound
File "zfree_4_2.pv", line 806, character 99 - line 806, character 115:
Warning: identifier ZeroRating_Data4 rebound
File "zfree_4_2.pv", line 837, character 11 - line 837, character 27:
Warning: identifier ZeroRating_Data1 rebound
File "zfree_4_2.pv", line 838, character 11 - line 838, character 27:
Warning: identifier ZeroRating_Data2 rebound
File "zfree_4_2.pv", line 839, character 11 - line 839, character 27:
Warning: identifier ZeroRating_Data3 rebound
File "zfree_4_2.pv", line 840, character 11 - line 840, character 27:
Warning: identifier ZeroRating_Data4 rebound
Linear part:
exp(exp(g,x_45),y) = exp(exp(g,y),x_45)
Completing equations...
Completed equations:
exp(exp(g,x_45),y) = exp(exp(g,y),x_45)
Convergent part:
xor(xor(x_46,y_47),y_47) = x_46
xor(x_48,x_48) = zeros
xor(zeros,x_49) = x_49
xor(x_50,zeros) = x_50
Completing equations...
Completed equations:
xor(x_50,zeros) = x_50
xor(zeros,x_49) = x_49
xor(x_48,x_48) = zeros
xor(xor(x_46,y_47),y_47) = x_46
Process:
{1}new skCA: bitstring;
{2}let pkCA: bitstring = pk(skCA) in
{3}out(c, pkCA);
{4}new skS: bitstring;
{5}let pkS: bitstring = pk(skS) in
{6}let signCA_pkS: bitstring = sign(H((HostInfoCA,HostInfoS,pkS)),skCA) in
{7}let server_certificate: bitstring = (HostInfoCA,HostInfoS,pkS,signCA_pkS) in
{8}out(c, server_certificate);
(
    {9}!
    {10}in(c, (client_version: bitstring,client_cipher_suites: bitstring,legacy_compression_methods: bitstring));
    {11}new client_random: bitstring;
    {12}new client_legacy_session_id: bitstring;
    {13}new X: bitstring;
    {14}let client_key_shares: bitstring = exp(g,X) in
    {15}let client_hello: bitstring = (client_version,client_random,client_legacy_session_id,client_cipher_suites,legacy_compression_methods,client_key_shares) in
    {16}out(c, client_hello);
    {17}in(c, (server_hello: bitstring,enc_encrypted_extensions: bitstring,enc_server_configuration: bitstring,enc_server_certificate: bitstring,enc_server_certificate_verify: bitstring,enc_server_finished: bitstring));
    {18}let (server_version: bitstring,server_random: bitstring,server_cipher_suite: bitstring,server_key_share: bitstring) = server_hello in
    {19}if ((server_version = client_version) && (server_cipher_suite = client_cipher_suites)) then
    {20}let static_secret: bitstring = exp(server_key_share,X) in
    {21}let ephemeral_secret: bitstring = exp(server_key_share,X) in
    {22}let xss: bitstring = HKDF_Extract(hkdf_zeros,static_secret) in
    {23}let xes: bitstring = HKDF_Extract(hkdf_zeros,ephemeral_secret) in
    {24}let handshake_context: bitstring = H((client_hello,server_hello)) in
    {25}let handshake_client_write_key: bitstring = HKDF_Expand(xes,((HKDF_LABEL_HANDSHAKE_KEY_EXPANSION,HKDF_LABEL_CLIENT_WRITE_KEY),handshake_context),hkdf_length_handshake_client_write_key) in
    {26}let handshake_server_write_key: bitstring = HKDF_Expand(xes,((HKDF_LABEL_HANDSHAKE_KEY_EXPANSION,HKDF_LABEL_SERVER_WRITE_KEY),handshake_context),hkdf_length_handshake_server_write_key) in
    {27}let handshake_client_write_iv: bitstring = HKDF_Expand(xes,((HKDF_LABEL_HANDSHAKE_KEY_EXPANSION,HKDF_LABEL_CLIENT_WRITE_IV),handshake_context),hkdf_length_handshake_client_write_IV) in
    {28}let handshake_server_write_iv: bitstring = HKDF_Expand(xes,((HKDF_LABEL_HANDSHAKE_KEY_EXPANSION,HKDF_LABEL_SERVER_WRITE_IV),handshake_context),hkdf_length_handshake_server_write_IV) in
    {29}let handshake_server_write_nonce_0: bitstring = xor(handshake_server_write_iv,server_seq_num) in
    {30}let (encrypted_extensions: bitstring,=record_type) = AEAD_Decrypt(handshake_server_write_key,handshake_server_write_nonce_0,enc_encrypted_extensions,empty) in
    {31}let handshake_server_write_nonce_1_250: bitstring = xor(handshake_server_write_iv,inc(server_seq_num)) in
    {32}let (server_configuration: bitstring,=record_type) = AEAD_Decrypt(handshake_server_write_key,handshake_server_write_nonce_1_250,enc_server_configuration,empty) in
    {33}let handshake_server_write_nonce_2_251: bitstring = xor(handshake_server_write_iv,inc(inc(server_seq_num))) in
    {34}let (server_certificate_252: bitstring,=record_type) = AEAD_Decrypt(handshake_server_write_key,handshake_server_write_nonce_2_251,enc_server_certificate,empty) in
    {35}let handshake_server_write_nonce_3_253: bitstring = xor(handshake_server_write_iv,inc(inc(inc(server_seq_num)))) in
    {36}let (server_certificate_verify: bitstring,=record_type) = AEAD_Decrypt(handshake_server_write_key,handshake_server_write_nonce_3_253,enc_server_certificate_verify,empty) in
    {37}let handshake_server_write_nonce_4_254: bitstring = xor(handshake_server_write_iv,inc(inc(inc(inc(server_seq_num))))) in
    {38}let (server_finished: bitstring,=record_type) = AEAD_Decrypt(handshake_server_write_key,handshake_server_write_nonce_4_254,enc_server_finished,empty) in
    {39}if (encrypted_extensions = empty) then
    {40}let (=HostInfoCA,=HostInfoS,pkS_255: bitstring,signCA_pkS_256: bitstring) = server_certificate_252 in
    {41}if (verify(signCA_pkS_256,H((HostInfoCA,HostInfoS,pkS_255)),pkCA) = true) then
    {42}let handshake_hashed_data: bitstring = H((client_hello,server_hello,encrypted_extensions,server_configuration,server_certificate_252)) in
    {43}if (verify(server_certificate_verify,handshake_hashed_data,pkS_255) = true) then
    {44}let handshake_hash: bitstring = H((client_hello,server_hello,encrypted_extensions,server_configuration,server_certificate_252,server_certificate_verify)) in
    {45}let mss: bitstring = HKDF_Expand(xss,(HKDF_LABAL_EXPANDED_STATIC_SECRET,handshake_hash),hkdf_length_mss) in
    {46}let mes: bitstring = HKDF_Expand(xes,(HKDF_LABEL_EXPANDED_EPHEMERAL_SECRET,handshake_hash),hkdf_length_mes) in
    {47}let master_secret: bitstring = HKDF_Extract(mss,mes) in
    {48}let traffic_secret_0: bitstring = HKDF_Expand(master_secret,(HKDF_LABEL_TRAFFIC_SECRET,handshake_hash),hkdf_length_traffic_secret) in
    {49}let server_finished_handshake_context: bitstring = H((client_hello,server_hello,encrypted_extensions,server_configuration,server_certificate_252,server_certificate_verify)) in
    {50}let server_finished_key: bitstring = HKDF_Expand(master_secret,(HKDF_SERVER_FINISHED,empty),hkdf_length_server_finished_key) in
    {51}if (server_finished = WeakH(server_finished_key,server_finished_handshake_context)) then
    {52}let client_finished_handshake_context: bitstring = H((client_hello,server_hello,encrypted_extensions,server_configuration,server_certificate_252,server_certificate_verify,server_finished)) in
    {53}let client_finished_key: bitstring = HKDF_Expand(master_secret,(HKDF_CLIENT_FINISHED,empty),hkdf_length_client_finished_key) in
    {54}let client_finished: bitstring = WeakH(client_finished_key,client_finished_handshake_context) in
    {55}let handshake_client_write_nonce_0: bitstring = xor(handshake_client_write_iv,client_seq_num) in
    {56}let enc_client_finished: bitstring = AEAD_Encrypt(handshake_client_write_key,handshake_client_write_nonce_0,(client_finished,record_type),empty) in
    {57}out(c, enc_client_finished);
    {58}in(c, (isp_Policy: bitstring,isp_OptionListLength: bitstring,isp_OptionList: bitstring));
    {59}let ZFree_HELLO_ISP: bitstring = (isp_Policy,isp_OptionListLength,isp_OptionList) in
    {60}out(c, ZFree_HELLO_ISP);
    {61}in(c, ZFree_HELLO_Server_Agent: bitstring);
    {62}let (cp_Policy: bitstring,cp_OptionListLength: bitstring,cp_OptionList: bitstring) = ZFree_HELLO_Server_Agent in
    {63}if ((isp_Policy = cp_Policy) && ((isp_OptionListLength = cp_OptionListLength) && (isp_OptionList = cp_OptionList))) then
    {64}new HashType: bitstring;
    {65}new ParseType: bitstring;
    {66}new connectionType: bitstring;
    {67}new AddressListLength: bitstring;
    {68}new AddressList: bitstring;
    {69}let ZFree_CONNECT: bitstring = (HashType,ParseType,connectionType,isp_Policy,AddressListLength,AddressList) in
    {70}out(c, ZFree_CONNECT);
    {71}in(c, ZFree_ACK: bitstring);
    {72}in(d, ZeroRating_Data1_c: bitstring);
    {73}in(d, ZeroRating_Data2_c: bitstring);
    {74}in(d, ZeroRating_Data3_c: bitstring);
    {75}in(d, ZeroRating_Data4_c: bitstring);
    {76}let khash1_ISP: bitstring = WeakH(client_finished_key,ZeroRating_Data1_c) in
    {77}let khash2_ISP: bitstring = WeakH(client_finished_key,ZeroRating_Data2_c) in
    {78}let khash3_ISP: bitstring = WeakH(client_finished_key,ZeroRating_Data3_c) in
    {79}let khash4_ISP: bitstring = WeakH(client_finished_key,ZeroRating_Data4_c) in
    {80}in(c, Hash_Push_otherside: bitstring);
    {81}let (HashValueLength: bitstring,HashValue: bitstring,timeStamp: bitstring,packet_hash: bitstring) = Hash_Push_otherside in
    {82}let ISP_value: bitstring = (khash1_ISP,khash2_ISP,khash3_ISP,khash4_ISP) in
    {83}let ISP_p_hash: bitstring = WeakH(client_finished_key,ISP_value) in
    {84}new content: bitstring;
    {85}let ISP_context: bitstring = (ISP_value,content) in
    {86}let (khash1_CP: bitstring,khash2_CP: bitstring,khash3_CP: bitstring,khash4_CP: bitstring) = HashValue in
    {87}if ((khash1_ISP = khash1_CP) && ((khash2_ISP = khash2_CP) && ((khash3_ISP = khash3_CP) && (khash1_ISP = khash1_CP)))) then
    {88}event endResponseVerif_h(ISP_context);
    {89}out(d, ZeroRating_Data1_c);
    {90}out(d, ZeroRating_Data2_c);
    {91}out(d, ZeroRating_Data3_c);
    {92}out(d, ZeroRating_Data4_c)
) | (
    {93}!
    {94}in(c, (server_version_257: bitstring,server_cipher_suite_258: bitstring));
    {95}in(c, client_hello_259: bitstring);
    {96}let (client_version_260: bitstring,client_random_261: bitstring,client_legacy_session_id_262: bitstring,client_cipher_suites_263: bitstring,legacy_compression_methods_264: bitstring,client_key_shares_265: bitstring) = client_hello_259 in
    {97}if ((client_version_260 = server_version_257) && ((client_cipher_suites_263 = server_cipher_suite_258) && (legacy_compression_methods_264 = null))) then
    {98}new server_random_266: bitstring;
    {99}new Y: bitstring;
    {100}let server_key_share_267: bitstring = exp(g,Y) in
    {101}let server_hello_268: bitstring = (server_version_257,server_random_266,server_cipher_suite_258,server_key_share_267) in
    {102}let static_secret_269: bitstring = exp(client_key_shares_265,Y) in
    {103}let ephemeral_secret_270: bitstring = exp(client_key_shares_265,Y) in
    {104}let xss_271: bitstring = HKDF_Extract(hkdf_zeros,static_secret_269) in
    {105}let xes_272: bitstring = HKDF_Extract(hkdf_zeros,ephemeral_secret_270) in
    {106}let handshake_context_273: bitstring = H((client_hello_259,server_hello_268)) in
    {107}let handshake_client_write_key_274: bitstring = HKDF_Expand(xes_272,((HKDF_LABEL_HANDSHAKE_KEY_EXPANSION,HKDF_LABEL_CLIENT_WRITE_KEY),handshake_context_273),hkdf_length_handshake_client_write_key) in
    {108}let handshake_server_write_key_275: bitstring = HKDF_Expand(xes_272,((HKDF_LABEL_HANDSHAKE_KEY_EXPANSION,HKDF_LABEL_SERVER_WRITE_KEY),handshake_context_273),hkdf_length_handshake_server_write_key) in
    {109}let handshake_client_write_iv_276: bitstring = HKDF_Expand(xes_272,((HKDF_LABEL_HANDSHAKE_KEY_EXPANSION,HKDF_LABEL_CLIENT_WRITE_IV),handshake_context_273),hkdf_length_handshake_client_write_IV) in
    {110}let handshake_server_write_iv_277: bitstring = HKDF_Expand(xes_272,((HKDF_LABEL_HANDSHAKE_KEY_EXPANSION,HKDF_LABEL_SERVER_WRITE_IV),handshake_context_273),hkdf_length_handshake_server_write_IV) in
    {111}let encrypted_extensions_278: bitstring = empty in
    {112}new configuration_id: bitstring;
    {113}new expiration_date: bitstring;
    {114}let static_key_share: bitstring = server_key_share_267 in
    {115}let server_configuration_279: bitstring = (configuration_id,expiration_date,static_key_share,early_data_type) in
    {116}let handshake_hashed_data_280: bitstring = H((client_hello_259,server_hello_268,encrypted_extensions_278,server_configuration_279,server_certificate)) in
    {117}let server_certificate_verify_281: bitstring = sign(handshake_hashed_data_280,skS) in
    {118}let handshake_hash_282: bitstring = H((client_hello_259,server_hello_268,encrypted_extensions_278,server_configuration_279,server_certificate,server_certificate_verify_281)) in
    {119}let mss_283: bitstring = HKDF_Expand(xss_271,(HKDF_LABAL_EXPANDED_STATIC_SECRET,handshake_hash_282),hkdf_length_mss) in
    {120}let mes_284: bitstring = HKDF_Expand(xes_272,(HKDF_LABEL_EXPANDED_EPHEMERAL_SECRET,handshake_hash_282),hkdf_length_mes) in
    {121}let master_secret_285: bitstring = HKDF_Extract(mss_283,mes_284) in
    {122}let traffic_secret_0_286: bitstring = HKDF_Expand(master_secret_285,(HKDF_LABEL_TRAFFIC_SECRET,handshake_hash_282),hkdf_length_traffic_secret) in
    {123}let server_finished_handshake_context_287: bitstring = H((client_hello_259,server_hello_268,encrypted_extensions_278,server_configuration_279,server_certificate,server_certificate_verify_281)) in
    {124}let server_finished_key_288: bitstring = HKDF_Expand(master_secret_285,(HKDF_SERVER_FINISHED,empty),hkdf_length_server_finished_key) in
    {125}let server_finished_289: bitstring = WeakH(server_finished_key_288,server_finished_handshake_context_287) in
    {126}let handshake_server_write_nonce_0_290: bitstring = xor(handshake_server_write_iv_277,server_seq_num) in
    {127}let enc_encrypted_extensions_291: bitstring = AEAD_Encrypt(handshake_server_write_key_275,handshake_server_write_nonce_0_290,(encrypted_extensions_278,record_type),empty) in
    {128}let handshake_server_write_nonce_1_292: bitstring = xor(handshake_server_write_iv_277,inc(server_seq_num)) in
    {129}let enc_server_configuration_293: bitstring = AEAD_Encrypt(handshake_server_write_key_275,handshake_server_write_nonce_1_292,(server_configuration_279,record_type),empty) in
    {130}let handshake_server_write_nonce_2_294: bitstring = xor(handshake_server_write_iv_277,inc(inc(server_seq_num))) in
    {131}let enc_server_certificate_295: bitstring = AEAD_Encrypt(handshake_server_write_key_275,handshake_server_write_nonce_2_294,(server_certificate,record_type),empty) in
    {132}let handshake_server_write_nonce_3_296: bitstring = xor(handshake_server_write_iv_277,inc(inc(inc(server_seq_num)))) in
    {133}let enc_server_certificate_verify_297: bitstring = AEAD_Encrypt(handshake_server_write_key_275,handshake_server_write_nonce_3_296,(server_certificate_verify_281,record_type),empty) in
    {134}let handshake_server_write_nonce_4_298: bitstring = xor(handshake_server_write_iv_277,inc(inc(inc(inc(server_seq_num))))) in
    {135}let enc_server_finished_299: bitstring = AEAD_Encrypt(handshake_server_write_key_275,handshake_server_write_nonce_4_298,(server_finished_289,record_type),empty) in
    {136}out(c, (server_hello_268,enc_encrypted_extensions_291,enc_server_configuration_293,enc_server_certificate_295,enc_server_certificate_verify_297,enc_server_finished_299));
    {137}in(c, enc_client_finished_300: bitstring);
    {138}let handshake_client_write_nonce_0_301: bitstring = xor(handshake_client_write_iv_276,client_seq_num) in
    {139}let (client_finished_302: bitstring,=record_type) = AEAD_Decrypt(handshake_client_write_key_274,handshake_client_write_nonce_0_301,enc_client_finished_300,empty) in
    {140}let client_finished_handshake_context_303: bitstring = H((client_hello_259,server_hello_268,encrypted_extensions_278,server_configuration_279,server_certificate,server_certificate_verify_281,server_finished_289)) in
    {141}let client_finished_key_304: bitstring = HKDF_Expand(master_secret_285,(HKDF_CLIENT_FINISHED,empty),hkdf_length_client_finished_key) in
    {142}if (client_finished_302 = WeakH(client_finished_key_304,client_finished_handshake_context_303)) then
    {143}in(c, (cp_Policy_305: bitstring,cp_OptionListLength_306: bitstring,cp_OptionList_307: bitstring));
    {144}in(c, ZFree_HELLO_ISP_308: bitstring);
    {145}let (isp_Policy_309: bitstring,isp_OptionListLength_310: bitstring,isp_OptionList_311: bitstring) = ZFree_HELLO_ISP_308 in
    {146}if ((cp_Policy_305 = isp_Policy_309) && ((cp_OptionListLength_306 = isp_OptionListLength_310) && (cp_OptionList_307 = isp_OptionList_311))) then
    {147}let ZFree_HELLO_Server_Agent_312: bitstring = (cp_Policy_305,cp_OptionListLength_306,cp_OptionList_307) in
    {148}out(c, ZFree_HELLO_Server_Agent_312);
    {149}in(c, ZFree_CONNECT_313: bitstring);
    {150}let (HashType_sa: bitstring,ParseType_sa: bitstring,connectionType_sa: bitstring,isp_Policy_sa: bitstring,AddressListLength_sa: bitstring,AddressList_sa: bitstring) = ZFree_CONNECT_313 in
    {151}new ZFree_ACK_314: bitstring;
    {152}out(c, ZFree_ACK_314);
    {153}in(d, ZeroRating_Data1_c_315: bitstring);
    {154}let khash1: bitstring = WeakH(server_finished_key_288,ZeroRating_Data1_c_315) in
    {155}out(d, ZeroRating_Data1_c_315);
    {156}in(d, ZeroRating_Data2_c_316: bitstring);
    {157}let khash2: bitstring = WeakH(server_finished_key_288,ZeroRating_Data2_c_316) in
    {158}out(d, ZeroRating_Data2_c_316);
    {159}in(d, ZeroRating_Data3_c_317: bitstring);
    {160}let khash3: bitstring = WeakH(server_finished_key_288,ZeroRating_Data3_c_317) in
    {161}out(d, ZeroRating_Data3_c_317);
    {162}in(d, ZeroRating_Data4_c_318: bitstring);
    {163}let khash4: bitstring = WeakH(server_finished_key_288,ZeroRating_Data4_c_318) in
    {164}out(d, ZeroRating_Data4_c_318);
    {165}new key_319: bitstring;
    {166}new HashValueLength_320: bitstring;
    {167}let HashValue_321: bitstring = (khash1,khash2,khash3,khash4) in
    {168}new timeStamp_322: bitstring;
    {169}let packet_hash_323: bitstring = WeakH(server_finished_key_288,HashValue_321) in
    {170}let packet_context: bitstring = (HashValue_321,packet_hash_323) in
    {171}let Hash_Push: bitstring = (HashValueLength_320,HashValue_321,timeStamp_322,packet_hash_323) in
    {172}out(c, Hash_Push);
    {173}event beginResponseVerif_h(packet_context)
) | (
    {174}!
    {175}in(c, (ZeroRating_Data1_324: bitstring,ZeroRating_Data2_325: bitstring,ZeroRating_Data3_326: bitstring,ZeroRating_Data4_327: bitstring));
    {176}out(d, ZeroRating_Data1_324);
    {177}out(d, ZeroRating_Data2_325);
    {178}out(d, ZeroRating_Data3_326);
    {179}out(d, ZeroRating_Data4_327)
) | (
    {180}!
    {181}in(d, ZeroRating_Data1_328: bitstring);
    {182}in(d, ZeroRating_Data2_329: bitstring);
    {183}in(d, ZeroRating_Data3_330: bitstring);
    {184}in(d, ZeroRating_Data4_331: bitstring)
) | (
    {185}!
    {186}in(c, (HostInfoX: bitstring,pkX: bitstring));
    {187}if ((HostInfoX <> HostInfoC) && ((HostInfoX <> HostInfoS) && (HostInfoX <> HostInfoCA))) then
    {188}let signCA_pkX: bitstring = sign(H((HostInfoCA,HostInfoX,pkX)),skCA) in
    {189}let X_certificate: bitstring = (HostInfoCA,HostInfoX,pkX,signCA_pkX) in
    {190}out(c, X_certificate)
)

-- Query event(endResponseVerif_h(keyedhash)) ==> event(beginResponseVerif_h(keyedhash))
